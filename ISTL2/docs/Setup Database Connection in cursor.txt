## 🛠️ **How to Install SQL Tools Extension in Cursor AI**

### **Method 1: Using Cursor AI Extensions Marketplace (Recommended)**

#### **Step 1: Open Extensions View**
- Press `Ctrl+Shift+X` (Windows/Linux) or `Cmd+Shift+X` (Mac)
- Or click the Extensions icon in the Activity Bar (left sidebar)

#### **Step 2: Search for SQL Extensions**
For PostgreSQL (which you're using), search for:
- `PostgreSQL` - Official PostgreSQL extension
- `SQLTools` - Universal SQL database client
- `SQLTools PostgreSQL` - PostgreSQL-specific driver

#### **Step 3: Install Recommended Extensions**

**Primary Recommendation: SQLTools**
1. Search for `SQLTools`
2. Install **"SQLTools"** by Matheus Teixeira
3. Install **"SQLTools PostgreSQL/Cockroach Driver"** by Matheus Teixeira

**Alternative: PostgreSQL Extension**
1. Search for `PostgreSQL`
2. Install **"PostgreSQL"** by Chris Kolkman

### **Method 2: Manual Installation (If Marketplace Issues)**

#### **Step 1: Download Extension Files**
1. Go to [Visual Studio Code Marketplace](https://marketplace.visualstudio.com/)
2. Search for your desired extension
3. Click "Download Extension" to get the `.vsix` file

#### **Step 2: Install from VSIX**
1. In Cursor AI, open Extensions view (`Ctrl+Shift+X`)
2. Click the "..." menu (three dots)
3. Select "Install from VSIX..."
4. Choose the downloaded `.vsix` file

### **Method 3: Command Line Installation**

#### **Using Cursor AI Command Palette**
1. Press `Ctrl+Shift+P` (Windows/Linux) or `Cmd+Shift+P` (Mac)
2. Type "Extensions: Install Extensions"
3. Search for your desired SQL extension
4. Click Install

---

## 🎯 **Recommended Extensions for Your Project**

### **1. SQLTools (Primary Choice)**
- **Extension ID**: `mtxr.sqltools`
- **Features**:
  - Connect to multiple database types
  - Query execution
  - Database explorer
  - IntelliSense
  - Query history

### **2. SQLTools PostgreSQL Driver**
- **Extension ID**: `mtxr.sqltools-driver-pg`
- **Features**:
  - PostgreSQL-specific features
  - Connection management
  - Schema browsing

### **3. PostgreSQL (Alternative)**
- **Extension ID**: `ms-ossdata.vscode-postgresql`
- **Features**:
  - PostgreSQL connection
  - Query execution
  - Database management

---

## 🔧 **Setup Database Connection**

### **After Installing SQLTools:**

#### **Step 1: Open SQLTools**
1. Click the SQLTools icon in Activity Bar
2. Or press `Ctrl+Shift+P` and type "SQLTools"

#### **Step 2: Add New Connection**
1. Click "Add New Connection"
2. Select "PostgreSQL"
3. Fill in connection details:

```json
{
  "name": "Sports India Database",
  "driver": "PostgreSQL",
  "server": "localhost",
  "port": 5432,
  "database": "sports_india",
  "username": "postgres",
  "password": "your_password"
}
```

#### **Step 3: Test Connection**
1. Click "Test Connection"
2. If successful, click "Save Connection"

---

## 🚀 **Quick Setup Commands**

### **Install via Command Line (if available)**
```bash
# Install SQLTools
code --install-extension mtxr.sqltools

# Install PostgreSQL driver
code --install-extension mtxr.sqltools-driver-pg
```

### **Verify Installation**
```bash
# List installed extensions
code --list-extensions | grep -i sql
```

---

## 🔍 **Troubleshooting**

### **If Extensions Don't Appear:**
1. **Check Marketplace Settings**:
   - Go to Settings (`Ctrl+,`)
   - Search for "marketplace"
   - Ensure marketplace is enabled

2. **Restart Cursor AI**:
   - Close and reopen Cursor AI
   - Try installing again

3. **Check Internet Connection**:
   - Ensure stable internet connection
   - Try refreshing the extensions view

### **If Installation Fails:**
1. **Clear Extension Cache**:
   - Close Cursor AI
   - Delete extension cache folder
   - Restart and try again

2. **Manual Download**:
   - Download `.vsix` file from marketplace
   - Install from VSIX option

---

## 📋 **Post-Installation Setup**

### **1. Configure Database Connection**
```json
{
  "sqltools.connections": [
    {
      "name": "Local Development",
      "driver": "PostgreSQL",
      "server": "localhost",
      "port": 5432,
      "database": "sports_india",
      "username": "postgres",
      "password": "your_password"
    }
  ]
}
```

### **2. Test Connection**
- Right-click on connection
- Select "Test Connection"
- Verify successful connection

### **3. Explore Database**
- Expand connection to see tables
- Right-click tables to view data
- Use query editor for SQL commands

---

## 🎯 **Benefits for Your Project**

### **With SQLTools Installed:**
1. **Direct Database Access** - Connect to your PostgreSQL database
2. **Query Execution** - Run SQL commands directly in Cursor AI
3. **Schema Exploration** - Browse tables, views, and relationships
4. **Data Visualization** - View and edit table data
5. **Query History** - Keep track of executed queries
6. **IntelliSense** - Auto-completion for SQL commands

### **Perfect for Your Use Case:**
- **Database Management** - Manage your sports tournament database
- **Data Cleaning** - Execute cleanup scripts directly
- **Schema Updates** - Apply Prisma migrations
- **Data Verification** - Check data integrity after operations

---

## 🚀 **Next Steps**

1. **Install SQLTools extension**
2. **Configure database connection**
3. **Test connection to your PostgreSQL database**
4. **Explore your database schema**
5. **Use for database management tasks**

**This will give you powerful database management capabilities directly within Cursor AI!** 🎯


-------------------------------------------------------------------------------------------

## 🛠️ **SQLTools Database Connection Setup Guide**

### **Step 1: Open SQLTools Panel**

1. **Look for SQLTools Icon**:
   - In the left sidebar (Activity Bar), look for the SQLTools icon
   - It looks like a database/server icon
   - If you don't see it, press `Ctrl+Shift+P` and type "SQLTools"

2. **Open SQLTools**:
   - Click on the SQLTools icon
   - Or press `Ctrl+Shift+P` → type "SQLTools: Focus on SQLTools View"

### **Step 2: Add New Connection**

1. **Click "Add New Connection"**:
   - In the SQLTools panel, you'll see a "+" button
   - Click it to add a new connection

2. **Select PostgreSQL Driver**:
   - A dropdown will appear
   - Select "PostgreSQL" from the list

### **Step 3: Configure Connection Details**

You'll see a form with these fields. Fill them out based on your database setup:

#### **Basic Connection Settings:**
```
Connection Name: Sports India Database
Server: localhost
Port: 5432
Database: sports_india
Username: postgres
Password: [your_password]
```

#### **Advanced Settings (Optional):**
```
SSL Mode: prefer (or disable for local development)
Connection Timeout: 30
```

### **Step 4: Test Connection**

1. **Click "Test Connection"**:
   - This will verify your settings are correct
   - You should see a success message

2. **If Test Fails**:
   - Check your database server is running
   - Verify username/password
   - Check if PostgreSQL is listening on the correct port

### **Step 5: Save Connection**

1. **Click "Save Connection"**:
   - This will store your connection settings
   - The connection will appear in the SQLTools panel

---

## 🔧 **Detailed Configuration Help**

### **If You Don't Know Your Database Details:**

Let me help you find your database connection information:


[2 tools called]

I can see your project uses PostgreSQL with a `DATABASE_URL` environment variable. Let me help you set up the connection:

### **Common Database Connection Settings:**

#### **For Local Development (Most Common):**
```
Connection Name: Local PostgreSQL
Server: localhost
Port: 5432
Database: sports_india (or your database name)
Username: postgres
Password: [your PostgreSQL password]
```

#### **For Production/Vercel:**
If you're using Vercel Postgres, your connection would look like:
```
Connection Name: Vercel Production
Server: ep-xxx.us-east-1.postgres.vercel-storage.com
Port: 5432
Database: verceldb
Username: default
Password: [your Vercel password]
```

---

## 🎯 **Step-by-Step Visual Guide**

### **1. Open SQLTools Panel**
- Look for this icon in your left sidebar: 🗄️
- Click it to open the SQLTools panel

### **2. Add Connection**
- Click the "+" button
- Select "PostgreSQL"

### **3. Fill Out Form**
You'll see a form like this:
```
┌─────────────────────────────────────┐
│ Connection Name: [Sports India DB]   │
│ Server: [localhost]                 │
│ Port: [5432]                        │
│ Database: [sports_india]            │
│ Username: [postgres]                │
│ Password: [••••••••]                │
│                                     │
│ [Test Connection] [Save Connection] │
└─────────────────────────────────────┘
```

### **4. Test and Save**
- Click "Test Connection"
- If successful, click "Save Connection"

---

## 🔍 **Troubleshooting Common Issues**

### **Issue 1: "Connection Refused"**
**Solution:**
- Make sure PostgreSQL is running
- Check if port 5432 is correct
- Verify server address

### **Issue 2: "Authentication Failed"**
**Solution:**
- Check username and password
- Make sure user has database access
- Try connecting with `psql` command line first

### **Issue 3: "Database Does Not Exist"**
**Solution:**
- Create the database first
- Check database name spelling
- Verify user has access to the database

---

## 🚀 **Quick Test Commands**

Let me help you verify your database connection:


[1 tool called]

It looks like PostgreSQL client tools aren't installed on your system. Let me help you with alternative ways to get your database connection details:

### **Method 1: Check Your Application's Database Connection**

Since your app is working, let's check how it connects to the database:


[1 tool called]

### **Method 2: Use Default Local Settings**

For now, try these **default local PostgreSQL settings** in SQLTools:

```
Connection Name: Local Development
Server: localhost
Port: 5432
Database: sports_india
Username: postgres
Password: [try common passwords like: postgres, password, or empty]
```

### **Method 3: Check Your Deployment**

If you're using Vercel, check your Vercel dashboard for database connection details.

---

## 📋 **What to Do Next**

### **1. Try Default Settings First**
Use the settings above and click "Test Connection"

### **2. If Test Fails**
- Check if PostgreSQL is running on your system
- Try different passwords (postgres, password, empty)
- Check if you're using a different port

### **3. If Test Succeeds**
- Click "Save Connection"
- You'll see your database tables in the SQLTools panel
- You can now run SQL queries directly in Cursor

### **4. Explore Your Database**
Once connected, you can:
- Browse tables (tournaments, users, organizers, etc.)
- Run SQL queries
- View table data
- Execute your cleanup scripts

---

## 🎯 **Quick Setup Checklist**

- [ ] Open SQLTools panel (🗄️ icon)
- [ ] Click "+" to add connection
- [ ] Select "PostgreSQL"
- [ ] Fill in connection details
- [ ] Click "Test Connection"
- [ ] Click "Save Connection" if test succeeds
- [ ] Explore your database tables

**Try the default settings first and let me know if the connection test succeeds or fails!** 🚀


[1 tool called]
